DELIMITER $$
DROP PROCEDURE IF EXISTS pay $$
CREATE PROCEDURE pay(IN u_id INT)

BEGIN

DECLARE total_sum  DECIMAL DEFAULT 0;
DECLARE discount INT DEFAULT 0;
DECLARE pay DECIMAL DEFAULT 0;
DECLARE oid INT DEFAULT 0;

DECLARE flag BOOL DEFAULT 0;
DECLARE CONTINUE HANDLER FOR SQLEXCEPTION SET flag=1;

START TRANSACTION;

select sum((carts.product_quantity * variants.price)) into total_sum from carts,variants where carts.variant_id = variants.id and carts.user_id = u_id;

update orders set final_cost = total_sum where orders.user_id = u_id;

set discount = 5;
set pay= total_sum-((total_sum*discount)/100);

select id into oid from orders where orders.user_id = u_id;

INSERT INTO payments (order_id, payment_type,discount_coupon,checkout_price,payment_date, payment_status, created, updated) VALUES (oid,'cash',discount,pay,now(),'pending',now(), now());


update variants inner join carts inner join orders on variants.id=carts.variant_id set variants.stock=variants.stock - carts.product_quantity where variants.id=carts.variant_id and carts.order_id=orders.id and orders.user_id=u_id;


INSERT INTO order_history SELECT * FROM carts WHERE carts.user_id=u_id;
DELETE from carts where carts.user_id=u_id ;

IF flag THEN
	ROLLBACK;
ELSE
  	COMMIT;
END IF;

END$$
DELIMITER ;


